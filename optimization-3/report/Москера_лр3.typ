#set page(
    paper: "a4",
    margin: (x: 1in, y: 1in),
)

#set text(size: 12pt)

#set align(center)

#image("fefu_logo.jpg", width: 4%)

#text(
    size: 10pt,
    [
    МИНИСТЕРСТВО НАУКИ И ВЫСШЕГО ОБРАЗОВАНИЯ И НАУКИ РОССИЙСКОЙ ФЕДЕРАЦИИ

    Федеральное государственное автономное образовательное учреждение высшего образования

    *«Дальневосточный федеральный университет»*

    (ДВФУ)
])

#v(0.5fr)

#line(length: 100%, stroke: 2pt)

#v(0.5fr)

*ИНСТИТУТ МАТЕМАТИКИ И КОМПЬЮТЕРНЫХ ТЕХНОЛОГИЙ*

#v(1fr)

*Департамент математического и компьютерного моделирования*

#v(1fr)

*ЛАБОРАТОРНАЯ РАБОТА №3*

По основной образовательной программе подготовки бакалавров
направлению 01.03.02 Прикладная математика и информатика
профиль «Системное программирование»

#v(1fr)

#grid(
    columns: (1fr,1fr),
    [],
    [
        #set align(left)
        Студент группы Б9121-02.03.01сцт

        Москера Креспо Адриан Хосуэ

        «24» декабря 2023 г.

        #v(24pt)

        Преподаватель кандидат физико-математических наук

        #underline("                                                        ") #text(size: 10pt, "(подпись)")

        Яковлев Анатолий Александрович

        «#underline("      ")» #underline("                         ") 2023 г.
    ]
)

#v(1fr)

г. Владивосток

2023

#v(1fr)

#pagebreak()

#set align(left)

#set par(
  first-line-indent: 0em,
  justify: true,
)

= Постановка задачи

Дана задача:

$ cases(
    c dot x arrow "max",
    A x <= b,
    x >= 0
  ) $

Где $c$ -- неотрицательный 6-мерный вектор, $x$ -- неотрицательный 6-мерный вектор неизвестных, который необходимо найти, $A$ -- матрица $8 times 6$, $b$ -- неотрицательный 8-мерный вектор.

= Исходные данные

$A$ --- произвольная матрица, $A in RR ^ (8 times 6)$

$b$ --- произвольный ненулевой вектор, $b in RR^8$
    
$c$ --- произвольный ненулевой вектор, $x in RR^6$

$  A = mat(
94.59, 4.49, 55.51, 73.94, 36.69, 4.80;
24.97, 25.35, 7.01, 7.30, 85.63, 81.97;
56.79, 97.75, 64.67, 78.62, 41.92, 86.50;
89.46, 8.34, 18.91, 76.28, 60.01, 92.08;
51.41, 97.51, 49.57, 86.14, 88.13, 33.39;
86.80, 44.25, 81.53, 89.32, 27.79, 39.62;
50.12, 34.00, 55.81, 47.61, 42.98, 42.99;
83.16, 92.15, 70.01, 40.77, 63.22, 57.51
) $

#grid(
    columns: (1fr,1fr),
    align(center)[$ b = vec(
      44.98, 92.47, 66.64, 59.89, 19.37, 58.58, 88.31, 78.15
    ) $],
    align(center)[$ c = vec(
      99.51, 4.43, 43.56, 20.65, 44.84, 62.67
    ) $],
)

Решать будем симплекс-методом. Для начала приведем задачу к каноническому виду. Введем дополнительный 8-мерный вектор переменных $z = A x - b$.

Тогда к вектору $c$ дописываем 8 нулей и рассматриваем вектор $vec(x,z)$. К матрице $A$ дописываем единичную матрицу и получаем:

$ cases(
    (c, 0) dot vec(x, z) arrow "max",
    (A I) vec(x, z) = b,
    x\,z >= 0
  )
$

= Прямая задача

Составим симплекс-таблицу. Первая строка – расширенный вектор $c$, где элементы мы запишем со знаком минус, чтобы решать задачу на минимум. Остальные строки – расширенная матрица $A$, последний столбик – вектор $b$, а первый элемент последнего столбца - значение целевой функции, равное 0.

Видим, что в первой строке (не включая значение целевой функции) есть отрицательные элементы, а значит оптимальное решение еще не найдено.

underline(Разрешающая колонка) находится путем выборки такого столбца, у которого элемент строки целевой функции отрицательный. Мы будем брать отрицательный элемент, максимальный по модулю.

underline(Разрешающей строкой) будет строка, содержащая наименьшее положительное отношение свободного числа к элементу разрешающего столбца.

Элемент, расположенный на пересечении разрешающих столбца и строки, называется разрешающим элементом.

$ mat(
-99.51, -4.43, -43.56, -20.65, -44.84, -62.67, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00;
94.59, 4.49, 55.51, 73.94, 36.69, 4.80, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 44.98;
24.97, 25.35, 7.01, 7.30, 85.63, 81.97, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 92.47;
56.79, 97.75, 64.67, 78.62, 41.92, 86.50, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 66.64;
89.46, 8.34, 18.91, 76.28, 60.01, 92.08, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 59.89;
51.41, 97.51, 49.57, 86.14, 88.13, 33.39, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 19.37;
86.80, 44.25, 81.53, 89.32, 27.79, 39.62, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 58.58;
50.12, 34.00, 55.81, 47.61, 42.98, 42.99, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 88.31;
83.16, 92.15, 70.01, 40.77, 63.22, 57.51, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 78.15
) $

Начальное угловое решение:

$ (0,0,0,0,0,0,44.98, 92.47, 66.64, 59.89, 19.37, 58.58, 88.31, 78.15) $

$ "разрешающая строка" = "№"6\
"разрешающий столбец" = "№"1\
"разрешающий элемент" = 51.412238730996926 $

Преобразовываем строки матрицы, то есть один из базисных столбцов станет не базисным, а разрешающий столбец – базисным:

1. Элементы разрешающей строки делим на разрешающий элемент, так как разрешающий элемент = 1, то строка останется прежней.

2. Преобразования остальных строк: Новая строка = Строка – элемент строки в разрешающем столбце \* элемент разрешающей строки

$
mat(
0.00, 184.32, 52.38, 146.08, 125.75, 1.96, 0.00, 0.00, 0.00, 0.00, 1.94, 0.00, 0.00, 0.00, 37.49;
0.00, -174.91, -35.68, -84.54, -125.45, -56.64, 1.00, 0.00, 0.00, 0.00, -1.84, 0.00, 0.00, 0.00, 9.35;
0.00, -22.02, -17.07, -34.54, 42.82, 65.75, 0.00, 1.00, 0.00, 0.00, -0.49, 0.00, 0.00, 0.00, 83.07;
0.00, -9.96, 9.92, -16.53, -55.43, 49.62, 0.00, 0.00, 1.00, 0.00, -1.10, 0.00, 0.00, 0.00, 45.24;
0.00, -161.34, -67.34, -73.61, -93.35, 33.98, 0.00, 0.00, 0.00, 1.00, -1.74, 0.00, 0.00, 0.00, 26.19;
1.00, 1.90, 0.96, 1.68, 1.71, 0.65, 0.00, 0.00, 0.00, 0.00, 0.02, 0.00, 0.00, 0.00, 0.38;
0.00, -120.38, -2.15, -56.11, -121.00, -16.76, 0.00, 0.00, 0.00, 0.00, -1.69, 1.00, 0.00, 0.00, 25.88;
0.00, -61.07, 7.49, -36.38, -42.94, 10.43, 0.00, 0.00, 0.00, 0.00, -0.97, 0.00, 1.00, 0.00, 69.43;
0.00, -65.59, -10.17, -98.57, -79.34, 3.50, 0.00, 0.00, 0.00, 0.00, -1.62, 0.00, 0.00, 1.00, 46.82
)
$

В первой строке (не включая значение целевой функции) НЕТ отрицательных элементов, а значит оптимальное решение найдено

$
underline("Оптимальное решение") = vec( 0.38, 0.00, 0.00, 0.00, 0.00, 0.00 )\
underline("Целевая функция") = 37.48633824605062
$

= Двойственная задача

Двойственная задача будет выглядеть так:

$ cases(
  b dot x arrow "min",
  A^T y >= c,
  y >= 0
  )
$

Где $c$ − неотрицательный 6-мерный вектор, $y$ − неотрицательный
8-мерный вектор неизвестных, который необходимо найти, $A^T$ − матрица $6 times 8$, $b$ − неотрицательный 8-мерный вектор.

$ A^T = mat(
94.59, 24.97, 56.79, 89.46, 51.41, 86.80, 50.12, 83.16;
4.49, 25.35, 97.75, 8.34, 97.51, 44.25, 34.00, 92.15;
55.51, 7.01, 64.67, 18.91, 49.57, 81.53, 55.81, 70.01;
73.94, 7.30, 78.62, 76.28, 86.14, 89.32, 47.61, 40.77;
36.69, 85.63, 41.92, 60.01, 88.13, 27.79, 42.98, 63.22;
4.80, 81.97, 86.50, 92.08, 33.39, 39.62, 42.99, 57.51
) $

#grid(
    columns: (1fr,1fr),
    align(center)[$ b = vec(
      44.98, 92.47, 66.64, 59.89, 19.37, 58.58, 88.31, 78.15
    ) $],
    align(center)[$ c = vec(
      99.51, 4.43, 43.56, 20.65, 44.84, 62.67
    ) $],
)

Для начала приведем задачу к каноническому виду. Введем дополнительный 6-мерный вектор переменных $z = A x − b$.

Тогда к вектору $c$ дописываем $m$ нулей и рассматриваем вектор $vec(y, z)$. К матрице справа дописываем единичную матрицу со знаком минус, получаем:

$ cases(
  (b,0) dot vec(y, z) arrow "min",
  (A^T (-I)) vec(y, z) = c,
  y\,z >= 0
  )
$

Двойственная задача не имеет начального углового решения, чтобы его найти необходимо решить вспомогательную задачу. Введем неотрицательный 8-мерный вектор $u$, тогда получим равенство $A x+u = b$ и будем решать задачу не на наш минимум (начальный), а на сумму компонент вектора $u$, получим:

$ cases(
  sum_(i=1)^m u_i arrow "min",
  (A^T (-I) I) vec(y, z, u) = c,
  y\, z >= 0\, u >= 0
  )
$

И в качестве начальной точки для этой задачи рассмотрим $x = 0$, а $u = b$. Решаем симплекс-методом и если решение $u = 0$, то тогда мы получим точку $x$, для которой $x = b$, $x >= 0$ и оно допустимое.

== Вспомогательная задача

Составим симплекс-таблицу.

$
script(
mat(
0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.00;
94.59, 24.97, 56.79, 89.46, 51.41, 86.80, 50.12, 83.16, -1.00, -0.00, -0.00, -0.00, -0.00, -0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 99.51;
4.49, 25.35, 97.75, 8.34, 97.51, 44.25, 34.00, 92.15, -0.00, -1.00, -0.00, -0.00, -0.00, -0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 4.43;
55.51, 7.01, 64.67, 18.91, 49.57, 81.53, 55.81, 70.01, -0.00, -0.00, -1.00, -0.00, -0.00, -0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 43.56;
73.94, 7.30, 78.62, 76.28, 86.14, 89.32, 47.61, 40.77, -0.00, -0.00, -0.00, -1.00, -0.00, -0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 20.65;
36.69, 85.63, 41.92, 60.01, 88.13, 27.79, 42.98, 63.22, -0.00, -0.00, -0.00, -0.00, -1.00, -0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 44.84;
4.80, 81.97, 86.50, 92.08, 33.39, 39.62, 42.99, 57.51, -0.00, -0.00, -0.00, -0.00, -0.00, -1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 62.67
)
)
$

Выделим базисные столбцы с помощью элементарных преобразований строк. К первой строке добавим все остальные строки, умноженные на -1. Получаем:

$
script(
mat(
-270.02, -232.24, -426.25, -345.09, -406.16, -369.29, -273.50, -406.84, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -275.67;
94.59, 24.97, 56.79, 89.46, 51.41, 86.80, 50.12, 83.16, -1.00, -0.00, -0.00, -0.00, -0.00, -0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 99.51;
4.49, 25.35, 97.75, 8.34, 97.51, 44.25, 34.00, 92.15, -0.00, -1.00, -0.00, -0.00, -0.00, -0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 4.43;
55.51, 7.01, 64.67, 18.91, 49.57, 81.53, 55.81, 70.01, -0.00, -0.00, -1.00, -0.00, -0.00, -0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 43.56;
73.94, 7.30, 78.62, 76.28, 86.14, 89.32, 47.61, 40.77, -0.00, -0.00, -0.00, -1.00, -0.00, -0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 20.65;
36.69, 85.63, 41.92, 60.01, 88.13, 27.79, 42.98, 63.22, -0.00, -0.00, -0.00, -0.00, -1.00, -0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 44.84;
4.80, 81.97, 86.50, 92.08, 33.39, 39.62, 42.99, 57.51, -0.00, -0.00, -0.00, -0.00, -0.00, -1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 62.67
)
)
$

Начальное угловое решение:

$ (0,0,0,0,0,0,0,0,99.51, 4.43, 43.56, 20.65, 44.84, 62.67) $

$
"разрешающая строка" = "№"3\
"разрешающий столбец" = "№"3\
"разрешающий элемент" = 97.74972599976931\
$
$ script(mat(
-250.43, -121.70, 0.00, -308.72, 19.06, -176.34, -125.23, -5.00, 1.00, -3.36, 1.00, 1.00, 1.00, 1.00, 0.00, 4.36, 0.00, 0.00, 0.00, 0.00, -256.35;
91.98, 10.25, 0.00, 84.62, -5.24, 61.09, 30.37, 29.63, -1.00, 0.58, 0.00, 0.00, 0.00, 0.00, 1.00, -0.58, 0.00, 0.00, 0.00, 0.00, 96.94;
0.05, 0.26, 1.00, 0.09, 1.00, 0.45, 0.35, 0.94, -0.00, -0.01, -0.00, -0.00, -0.00, -0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.05;
52.54, -9.76, 0.00, 13.39, -14.95, 52.25, 33.31, 9.05, 0.00, 0.66, -1.00, 0.00, 0.00, 0.00, 0.00, -0.66, 1.00, 0.00, 0.00, 0.00, 40.63;
70.32, -13.08, 0.00, 69.57, 7.71, 53.73, 20.26, -33.35, 0.00, 0.80, 0.00, -1.00, 0.00, 0.00, 0.00, -0.80, 0.00, 1.00, 0.00, 0.00, 17.09;
34.77, 74.76, 0.00, 56.43, 46.32, 8.81, 28.40, 23.70, 0.00, 0.43, 0.00, 0.00, -1.00, 0.00, 0.00, -0.43, 0.00, 0.00, 1.00, 0.00, 42.94;
0.82, 59.54, 0.00, 84.70, -52.90, 0.46, 12.90, -24.03, 0.00, 0.88, 0.00, 0.00, 0.00, -1.00, 0.00, -0.88, 0.00, 0.00, 0.00, 1.00, 58.75
))\
$
$ "разрешающая строка" = "№"5\
"разрешающий столбец" = "№"4\
"разрешающий элемент" = 69.57374944318065\
$
$script(mat(
61.61, -179.76, 0.00, 0.00, 53.27, 62.06, -35.35, -152.96, 1.00, 0.21, 1.00, -3.44, 1.00, 1.00, 0.00, 0.79, 0.00, 4.44, 0.00, 0.00, -180.52;
6.45, 26.16, 0.00, 0.00, -14.62, -4.25, 5.73, 70.18, -1.00, -0.40, 0.00, 1.22, 0.00, 0.00, 1.00, 0.40, 0.00, -1.22, 0.00, 0.00, 76.16;
-0.04, 0.28, 1.00, 0.00, 0.99, 0.39, 0.32, 0.98, -0.00, -0.01, -0.00, 0.00, -0.00, -0.00, 0.00, 0.01, 0.00, -0.00, 0.00, 0.00, 0.02;
39.00, -7.25, 0.00, 0.00, -16.43, 41.91, 29.41, 15.46, 0.00, 0.51, -1.00, 0.19, 0.00, 0.00, 0.00, -0.51, 1.00, -0.19, 0.00, 0.00, 37.34;
1.01, -0.19, 0.00, 1.00, 0.11, 0.77, 0.29, -0.48, 0.00, 0.01, 0.00, -0.01, 0.00, 0.00, 0.00, -0.01, 0.00, 0.01, 0.00, 0.00, 0.25;
-22.27, 85.38, 0.00, 0.00, 40.06, -34.77, 11.97, 50.75, 0.00, -0.22, 0.00, 0.81, -1.00, 0.00, 0.00, 0.22, 0.00, -0.81, 1.00, 0.00, 29.08;
-84.79, 75.47, 0.00, 0.00, -62.29, -64.95, -11.77, 16.56, 0.00, -0.09, 0.00, 1.22, 0.00, -1.00, 0.00, 0.09, 0.00, -1.22, 0.00, 1.00, 37.95
))\
$
$ "разрешающая строка" = "№"3\
"разрешающий столбец" = "№"2\
"разрешающий элемент" = 0.275371767858195\
$
$ script(mat(
35.31, 0.00, 652.79, 0.00, 698.30, 314.55, 175.50, 489.14, 1.00, -7.11, 1.00, -2.64, 1.00, 1.00, 0.00, 8.11, 0.00, 3.64, 0.00, 0.00, -164.62;
10.28, 0.00, -94.99, 0.00, -108.48, -40.99, -24.95, -23.26, -1.00, 0.67, 0.00, 1.10, 0.00, 0.00, 1.00, -0.67, 0.00, -1.10, 0.00, 0.00, 73.84;
-0.15, 1.00, 3.63, 0.00, 3.59, 1.40, 1.17, 3.57, -0.00, -0.04, -0.00, 0.00, -0.00, -0.00, 0.00, 0.04, 0.00, -0.00, 0.00, 0.00, 0.09;
37.94, 0.00, 26.31, 0.00, 9.57, 52.09, 37.91, 41.35, 0.00, 0.21, -1.00, 0.22, 0.00, 0.00, 0.00, -0.21, 1.00, -0.22, 0.00, 0.00, 37.98;
0.98, 0.00, 0.68, 1.00, 0.79, 1.04, 0.51, 0.19, 0.00, 0.00, 0.00, -0.01, 0.00, 0.00, 0.00, -0.00, 0.00, 0.01, 0.00, 0.00, 0.26;
-9.78, 0.00, -310.04, 0.00, -266.29, -154.68, -88.17, -254.21, 0.00, 3.25, 0.00, 0.43, -1.00, 0.00, 0.00, -3.25, 0.00, -0.43, 1.00, 0.00, 21.53;
-73.75, 0.00, -274.07, 0.00, -333.10, -170.96, -100.29, -253.02, 0.00, 2.98, 0.00, 0.88, 0.00, -1.00, 0.00, -2.98, 0.00, -0.88, 0.00, 1.00, 31.27
))\
$
$ "разрешающая строка" = "№"6\
"разрешающий столбец" = "№"10\
"разрешающий элемент" = 3.254025373438725\
$
$ script(mat(
13.92, 0.00, -25.00, 0.00, 116.15, -23.62, -17.26, -66.60, 1.00, 0.00, 1.00, -1.69, -1.19, 1.00, 0.00, 1.00, 0.00, 2.69, 2.19, 0.00, -117.56;
12.29, 0.00, -31.32, 0.00, -53.79, -9.23, -6.84, 28.95, -1.00, 0.00, 0.00, 1.01, 0.21, 0.00, 1.00, 0.00, 0.00, -1.01, -0.21, 0.00, 69.42;
-0.27, 1.00, -0.25, 0.00, 0.25, -0.53, 0.07, 0.39, 0.00, 0.00, 0.00, 0.01, -0.01, 0.00, 0.00, 0.00, 0.00, -0.01, 0.01, 0.00, 0.36;
38.58, 0.00, 46.48, 0.00, 26.89, 62.15, 43.65, 57.88, 0.00, 0.00, -1.00, 0.20, 0.07, 0.00, 0.00, 0.00, 1.00, -0.20, -0.07, 0.00, 36.58;
0.99, 0.00, 1.05, 1.00, 1.10, 1.22, 0.62, 0.50, 0.00, 0.00, 0.00, -0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, -0.00, 0.00, 0.24;
-3.01, 0.00, -95.28, 0.00, -81.83, -47.54, -27.10, -78.12, 0.00, 1.00, 0.00, 0.13, -0.31, 0.00, 0.00, -1.00, 0.00, -0.13, 0.31, 0.00, 6.62;
-64.79, 0.00, 9.85, 0.00, -89.24, -29.30, -19.54, -20.23, 0.00, 0.00, 0.00, 0.49, 0.92, -1.00, 0.00, 0.00, 0.00, -0.49, -0.92, 1.00, 11.56
))\
$
$ "разрешающая строка" = "№"5\
"разрешающий столбец" = "№"8\
"разрешающий элемент" = 0.49715991115559705\
$
$ script(mat(
147.22, 0.00, 116.27, 133.97, 264.16, 140.06, 65.45, 0.00, 1.00, 0.00, 1.00, -3.58, -1.03, 1.00, 0.00, 1.00, 0.00, 4.58, 2.03, 0.00, -85.88;
-45.65, 0.00, -92.73, -58.23, -118.13, -80.37, -42.80, 0.00, -1.00, 0.00, 0.00, 1.83, 0.14, 0.00, 1.00, 0.00, 0.00, -1.83, -0.14, 0.00, 55.65;
-1.05, 1.00, -1.08, -0.78, -0.61, -1.49, -0.42, 0.00, 0.00, 0.00, 0.00, 0.02, -0.01, 0.00, 0.00, 0.00, 0.00, -0.02, 0.01, 0.00, 0.17;
-77.25, 0.00, -76.29, -116.42, -101.73, -80.09, -28.23, 0.00, 0.00, 0.00, -1.00, 1.83, -0.07, 0.00, 0.00, 0.00, 1.00, -1.83, 0.07, 0.00, 9.05;
2.00, 0.00, 2.12, 2.01, 2.22, 2.46, 1.24, 1.00, 0.00, 0.00, 0.00, -0.03, 0.00, 0.00, 0.00, 0.00, 0.00, 0.03, -0.00, 0.00, 0.48;
153.34, 0.00, 70.43, 157.13, 91.77, 144.45, 69.92, 0.00, 0.00, 1.00, 0.00, -2.08, -0.12, 0.00, 0.00, -1.00, 0.00, 2.08, 0.12, 0.00, 43.77;
-24.31, 0.00, 52.75, 40.68, -44.29, 20.40, 5.58, 0.00, 0.00, 0.00, 0.00, -0.08, 0.96, -1.00, 0.00, 0.00, 0.00, 0.08, -0.96, 1.00, 21.18
))\
$
$ "разрешающая строка" = "№"4\
"разрешающий столбец" = "№"12\
"разрешающий элемент" = 1.8326378309970468\
$
$ script(mat(
-3.57, 0.00, -32.65, -93.27, 65.58, -16.27, 10.34, 0.00, 1.00, 0.00, -0.95, 0.00, -1.17, 1.00, 0.00, 1.00, 1.95, 1.00, 2.17, 0.00, -68.21;
31.47, 0.00, -16.57, 57.98, -16.57, -0.42, -14.61, 0.00, -1.00, 0.00, 1.00, 0.00, 0.21, 0.00, 1.00, 0.00, -1.00, 0.00, -0.21, 0.00, 46.61;
-0.17, 1.00, -0.21, 0.54, 0.55, -0.58, -0.09, 0.00, 0.00, 0.00, 0.01, 0.00, -0.01, 0.00, 0.00, 0.00, -0.01, 0.00, 0.01, 0.00, 0.07;
-42.15, 0.00, -41.63, -63.52, -55.51, -43.70, -15.40, 0.00, 0.00, 0.00, -0.55, 1.00, -0.04, 0.00, 0.00, 0.00, 0.55, -1.00, 0.04, 0.00, 4.94;
0.81, 0.00, 0.94, 0.22, 0.65, 1.22, 0.81, 1.00, 0.00, 0.00, -0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.00, -0.00, 0.00, 0.62;
65.84, 0.00, -15.98, 25.28, -23.45, 53.74, 37.95, 0.00, 0.00, 1.00, -1.13, 0.00, -0.20, 0.00, 0.00, -1.00, 1.13, 0.00, 0.20, 0.00, 54.02;
-27.89, 0.00, 49.22, 35.29, -49.01, 16.69, 4.27, 0.00, 0.00, 0.00, -0.05, 0.00, 0.96, -1.00, 0.00, 0.00, 0.05, 0.00, -0.96, 1.00, 21.60
))\
$
$ "разрешающая строка" = "№"3\
"разрешающий столбец" = "№"4\
"разрешающий элемент" = 0.5413717451999963\
$
$ script(mat(
-32.76, 172.28, -68.45, 0.00, 159.81, -115.83, -5.77, 0.00, 1.00, 0.00, 1.01, 0.00, -3.34, 1.00, 0.00, 1.00, -0.01, 1.00, 4.34, 0.00, -56.25;
49.61, -107.11, 5.69, 0.00, -75.15, 61.48, -4.59, 0.00, -1.00, 0.00, -0.22, 0.00, 1.56, 0.00, 1.00, 0.00, 0.22, 0.00, -1.56, 0.00, 39.18;
-0.31, 1.85, -0.38, 1.00, 1.01, -1.07, -0.17, 0.00, 0.00, 0.00, 0.02, 0.00, -0.02, 0.00, 0.00, 0.00, -0.02, 0.00, 0.02, 0.00, 0.13;
-62.03, 117.34, -66.01, 0.00, 8.66, -111.52, -26.38, 0.00, 0.00, 0.00, 0.79, 1.00, -1.52, 0.00, 0.00, 0.00, -0.79, -1.00, 1.52, 0.00, 13.09;
0.88, -0.40, 1.03, 0.00, 0.44, 1.45, 0.84, 1.00, 0.00, 0.00, -0.02, 0.00, 0.01, 0.00, 0.00, 0.00, 0.02, 0.00, -0.01, 0.00, 0.59;
73.75, -46.70, -6.28, 0.00, -48.99, 80.72, 42.32, 0.00, 0.00, 1.00, -1.66, 0.00, 0.39, 0.00, 0.00, -1.00, 1.66, 0.00, -0.39, 0.00, 50.78;
-16.85, -65.18, 62.76, 0.00, -84.66, 54.36, 10.36, 0.00, 0.00, 0.00, -0.79, 0.00, 1.78, -1.00, 0.00, 0.00, 0.79, 0.00, -1.78, 1.00, 17.07
))\
$
$ "разрешающая строка" = "№"7\
"разрешающий столбец" = "№"6\
"разрешающий элемент" = 54.35702631727898\
$
$ script(mat(
-68.67, 33.39, 65.29, 0.00, -20.60, 0.00, 16.32, 0.00, 1.00, 0.00, -0.67, 0.00, 0.46, -1.13, 0.00, 1.00, 1.67, 1.00, 0.54, 2.13, -19.87;
68.67, -33.39, -65.29, 0.00, 20.60, 0.00, -16.32, 0.00, -1.00, 0.00, 0.67, 0.00, -0.46, 1.13, 1.00, 0.00, -0.67, 0.00, 0.46, -1.13, 19.87;
-0.64, 0.57, 0.85, 1.00, -0.65, 0.00, 0.03, 0.00, 0.00, 0.00, 0.01, 0.00, 0.01, -0.02, 0.00, 0.00, -0.01, 0.00, -0.01, 0.02, 0.46;
-96.60, -16.37, 62.74, 0.00, -165.01, 0.00, -5.12, 0.00, 0.00, 0.00, -0.83, 1.00, 2.14, -2.05, 0.00, 0.00, 0.83, -1.00, -2.14, 2.05, 48.11;
1.33, 1.34, -0.65, 0.00, 2.70, 0.00, 0.57, 1.00, 0.00, 0.00, 0.00, 0.00, -0.04, 0.03, 0.00, 0.00, -0.00, 0.00, 0.04, -0.03, 0.13;
98.78, 50.10, -99.48, 0.00, 76.73, 0.00, 26.92, 0.00, 0.00, 1.00, -0.49, 0.00, -2.26, 1.49, 0.00, -1.00, 0.49, 0.00, 2.26, -1.49, 25.43;
-0.31, -1.20, 1.15, 0.00, -1.56, 1.00, 0.19, 0.00, 0.00, 0.00, -0.01, 0.00, 0.03, -0.02, 0.00, 0.00, 0.01, 0.00, -0.03, 0.02, 0.31
))\
$
$ "разрешающая строка" = "№"5\
"разрешающий столбец" = "№"1\
"разрешающий элемент" = 1.327815966105103\
$
$ script(mat(
0.00, 102.86, 31.68, 0.00, 118.92, 0.00, 45.63, 51.72, 1.00, 0.00, -0.61, 0.00, -1.68, 0.25, 0.00, 1.00, 1.61, 1.00, 2.68, 0.75, -13.08;
0.00, -102.86, -31.68, 0.00, -118.92, 0.00, -45.63, -51.72, -1.00, 0.00, 0.61, 0.00, 1.68, -0.25, 1.00, 0.00, -0.61, 0.00, -1.68, 0.25, 13.08;
0.00, 1.22, 0.53, 1.00, 0.66, 0.00, 0.31, 0.48, 0.00, 0.00, 0.01, 0.00, -0.01, -0.01, 0.00, 0.00, -0.01, 0.00, 0.01, 0.01, 0.53;
0.00, 81.34, 15.45, 0.00, 31.26, 0.00, 36.12, 72.75, 0.00, 0.00, -0.75, 1.00, -0.87, -0.11, 0.00, 0.00, 0.75, -1.00, 0.87, 0.11, 57.66;
1.00, 1.01, -0.49, 0.00, 2.03, 0.00, 0.43, 0.75, 0.00, 0.00, 0.00, 0.00, -0.03, 0.02, 0.00, 0.00, -0.00, 0.00, 0.03, -0.02, 0.10;
0.00, -49.82, -51.12, 0.00, -123.96, 0.00, -15.24, -74.39, 0.00, 1.00, -0.58, 0.00, 0.81, -0.50, 0.00, -1.00, 0.58, 0.00, -0.81, 0.50, 15.66;
0.00, -0.89, 1.00, 0.00, -0.93, 1.00, 0.32, 0.23, 0.00, 0.00, -0.01, 0.00, 0.02, -0.01, 0.00, 0.00, 0.01, 0.00, -0.02, 0.01, 0.34
))\
$
$ "разрешающая строка" = "№"2\
"разрешающий столбец" = "№"13\
"разрешающий элемент" = 1.6831044831459474\
$
$ script(mat(
0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.00;
0.00, -61.11, -18.82, 0.00, -70.66, 0.00, -27.11, -30.73, -0.59, 0.00, 0.36, 0.00, 1.00, -0.15, 0.59, 0.00, -0.36, 0.00, -1.00, 0.15, 7.77;
0.00, 0.71, 0.38, 1.00, 0.07, 0.00, 0.08, 0.23, -0.00, 0.00, 0.01, 0.00, 0.00, -0.01, 0.00, 0.00, -0.01, 0.00, 0.00, 0.01, 0.59;
0.00, 28.08, -0.96, 0.00, -30.33, 0.00, 12.49, 45.97, -0.52, 0.00, -0.43, 1.00, 0.00, -0.24, 0.52, 0.00, 0.43, -1.00, 0.00, 0.24, 64.43;
1.00, -0.89, -1.08, 0.00, -0.17, 0.00, -0.42, -0.20, -0.02, 0.00, 0.01, 0.00, 0.00, 0.02, 0.02, 0.00, -0.01, 0.00, 0.00, -0.02, 0.34;
0.00, -0.04, -35.79, 0.00, -66.40, 0.00, 6.84, -49.36, 0.48, 1.00, -0.87, 0.00, 0.00, -0.38, -0.48, -1.00, 0.87, 0.00, 0.00, 0.38, 9.33;
0.00, 0.53, 1.44, 0.00, 0.71, 1.00, 0.95, 0.94, 0.01, 0.00, -0.02, 0.00, 0.00, -0.01, -0.01, 0.00, 0.02, 0.00, 0.00, 0.01, 0.16
))\
$
$ "разрешающая строка" = "№"7\
"разрешающий столбец" = "№"8\
"разрешающий элемент" = 0.9445970034952578\
$
$ script(mat(
0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.00, 0.00, 0.00, -0.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.00;
0.00, -43.91, 27.97, 0.00, -47.64, 32.53, 3.81, 0.00, -0.15, 0.00, -0.37, 0.00, 1.00, -0.43, 0.15, 0.00, 0.37, 0.00, -1.00, 0.43, 13.13;
0.00, 0.58, 0.03, 1.00, -0.10, -0.24, -0.15, 0.00, -0.01, 0.00, 0.01, 0.00, 0.00, -0.01, 0.01, 0.00, -0.01, 0.00, 0.00, 0.01, 0.55;
0.00, 2.34, -70.96, 0.00, -64.77, -48.66, -33.76, 0.00, -1.19, 0.00, 0.67, 1.00, 0.00, 0.19, 1.19, 0.00, -0.67, -1.00, 0.00, -0.19, 56.41;
1.00, -0.78, -0.77, 0.00, -0.02, 0.22, -0.21, 0.00, -0.02, 0.00, 0.01, 0.00, 0.00, 0.01, 0.02, 0.00, -0.01, 0.00, 0.00, -0.01, 0.38;
0.00, 27.59, 39.37, 0.00, -29.42, 52.26, 56.51, 0.00, 1.20, 1.00, -2.06, 0.00, 0.00, -0.84, -1.20, -1.00, 2.06, 0.00, 0.00, 0.84, 17.95;
0.00, 0.56, 1.52, 0.00, 0.75, 1.06, 1.01, 1.00, 0.01, 0.00, -0.02, 0.00, 0.00, -0.01, -0.01, 0.00, 0.02, 0.00, 0.00, 0.01, 0.17
))\
$
$ "разрешающая строка" = "№"3\
"разрешающий столбец" = "№"11\
"разрешающий элемент" = 1.4615058212909225e-2\
$
$ script(mat(
0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.00;
0.00, -29.06, 28.69, 25.55, -50.30, 26.34, -0.04, 0.00, -0.36, 0.00, 0.00, 0.00, 1.00, -0.58, 0.36, 0.00, 0.00, 0.00, -1.00, 0.58, 27.24;
0.00, 39.76, 1.93, 68.42, -7.15, -16.58, -10.30, 0.00, -0.57, 0.00, 1.00, 0.00, 0.00, -0.40, 0.57, 0.00, -1.00, 0.00, 0.00, 0.40, 37.77;
0.00, -24.48, -72.26, -46.16, -59.95, -37.48, -26.81, 0.00, -0.80, 0.00, 0.00, 1.00, 0.00, 0.45, 0.80, 0.00, 0.00, -1.00, 0.00, -0.45, 30.93;
1.00, -1.07, -0.78, -0.50, 0.04, 0.34, -0.14, 0.00, -0.01, 0.00, 0.00, 0.00, 0.00, 0.02, 0.01, 0.00, 0.00, 0.00, 0.00, -0.02, 0.10;
0.00, 109.40, 43.34, 140.79, -44.13, 18.15, 35.31, 0.00, 0.04, 1.00, 0.00, 0.00, 0.00, -1.65, -0.04, -1.00, 0.00, 0.00, 0.00, 1.65, 95.66;
0.00, 1.51, 1.57, 1.64, 0.58, 0.66, 0.76, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.02, -0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 1.08
))\
$
$
"разрешающая строка" = "№"5\
"разрешающий столбец" = "№"14\
"разрешающий элемент" = 1.649738064202113e-2\
$
$
script(mat(
0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.00;
35.21, -66.65, 1.25, 8.00, -49.05, 38.20, -4.87, 0.00, -0.76, 0.00, 0.00, 0.00, 1.00, 0.00, 0.76, 0.00, 0.00, 0.00, -1.00, 0.00, 30.81;
24.12, 14.02, -16.86, 56.40, -6.28, -8.46, -13.61, 0.00, -0.84, 0.00, 1.00, 0.00, 0.00, 0.00, 0.84, 0.00, -1.00, 0.00, 0.00, 0.00, 40.22;
-27.56, 4.94, -50.78, -32.42, -60.94, -46.76, -23.03, 0.00, -0.49, 0.00, 0.00, 1.00, 0.00, 0.00, 0.49, 0.00, 0.00, -1.00, -0.00, 0.00, 28.14;
60.62, -64.70, -47.23, -30.21, 2.16, 20.41, -8.32, 0.00, -0.69, 0.00, 0.00, 0.00, 0.00, 1.00, 0.69, 0.00, 0.00, 0.00, 0.00, -1.00, 6.15;
100.31, 2.32, -34.82, 90.79, -40.54, 51.93, 21.54, 0.00, -1.11, 1.00, 0.00, 0.00, 0.00, 0.00, 1.11, -1.00, 0.00, 0.00, 0.00, 0.00, 105.84;
1.14, 0.30, 0.68, 1.08, 0.62, 1.04, 0.60, 1.00, -0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 1.20
))
$

$ underline("Оптимальное решение") = vec( 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.20 ) $

== Решение двойственной задачи

Составим симплекс-таблицу для двойственной задачи. Из прошлой матрицы убираем столбцы, соответствующие вектору $u$, первую строку заменяем на расширенный вектор b и значение целевой функции приравниваем к нулю.

$ mat(
44.98, 92.47, 66.64, 59.89, 19.37, 58.58, 88.31, 78.15, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00;
35.21, -66.65, 1.25, 8.00, -49.05, 38.20, -4.87, 0.00, -0.76, 0.00, 0.00, 0.00, 1.00, 0.00, 30.81;
24.12, 14.02, -16.86, 56.40, -6.28, -8.46, -13.61, 0.00, -0.84, 0.00, 1.00, 0.00, 0.00, 0.00, 40.22;
-27.56, 4.94, -50.78, -32.42, -60.94, -46.76, -23.03, 0.00, -0.49, 0.00, 0.00, 1.00, 0.00, 0.00, 28.14;
60.62, -64.70, -47.23, -30.21, 2.16, 20.41, -8.32, 0.00, -0.69, 0.00, 0.00, 0.00, 0.00, 1.00, 6.15;
100.31, 2.32, -34.82, 90.79, -40.54, 51.93, 21.54, 0.00, -1.11, 1.00, 0.00, 0.00, 0.00, 0.00, 105.84;
1.14, 0.30, 0.68, 1.08, 0.62, 1.04, 0.60, 1.00, -0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 1.20
) $

Выделяем базисные столбцы с помощью элементарных преобразований строк матрицы. К первой строке добавляем седьмую строку,
умноженную на -1.

$ mat(
-43.90, 69.01, 13.27, -24.18, -28.95, -22.99, 41.21, 0.00, 0.94, 0.00, 0.00, 0.00, 0.00, 0.00, -93.51;
35.21, -66.65, 1.25, 8.00, -49.05, 38.20, -4.87, 0.00, -0.76, 0.00, 0.00, 0.00, 1.00, 0.00, 30.81;
24.12, 14.02, -16.86, 56.40, -6.28, -8.46, -13.61, 0.00, -0.84, 0.00, 1.00, 0.00, 0.00, 0.00, 40.22;
-27.56, 4.94, -50.78, -32.42, -60.94, -46.76, -23.03, 0.00, -0.49, 0.00, 0.00, 1.00, 0.00, 0.00, 28.14;
60.62, -64.70, -47.23, -30.21, 2.16, 20.41, -8.32, 0.00, -0.69, 0.00, 0.00, 0.00, 0.00, 1.00, 6.15;
100.31, 2.32, -34.82, 90.79, -40.54, 51.93, 21.54, 0.00, -1.11, 1.00, 0.00, 0.00, 0.00, 0.00, 105.84;
1.14, 0.30, 0.68, 1.08, 0.62, 1.04, 0.60, 1.00, -0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 1.20
) $
$ "разрешающая строка" = "№"5\
"разрешающий столбец" = "№"1\
"разрешающий элемент" = 60.61568328325168 $
$ mat(
0.00, 22.14, -20.94, -46.06, -27.38, -8.20, 35.18, 0.00, 0.44, 0.00, 0.00, 0.00, 0.00, 0.72, -89.06;
0.00, -29.06, 28.69, 25.55, -50.30, 26.34, -0.04, 0.00, -0.36, 0.00, 0.00, 0.00, 1.00, -0.58, 27.24;
0.00, 39.76, 1.93, 68.42, -7.15, -16.58, -10.30, 0.00, -0.57, 0.00, 1.00, 0.00, 0.00, -0.40, 37.77;
0.00, -24.48, -72.26, -46.16, -59.95, -37.48, -26.81, 0.00, -0.80, 0.00, 0.00, 1.00, 0.00, 0.45, 30.93;
1.00, -1.07, -0.78, -0.50, 0.04, 0.34, -0.14, 0.00, -0.01, 0.00, 0.00, 0.00, 0.00, 0.02, 0.10;
0.00, 109.40, 43.34, 140.79, -44.13, 18.15, 35.31, 0.00, 0.04, 1.00, 0.00, 0.00, 0.00, -1.65, 95.66;
0.00, 1.51, 1.57, 1.64, 0.58, 0.66, 0.76, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, -0.02, 1.08
) $
$ "разрешающая строка" = "№"3\
"разрешающий столбец" = "№"4\
"разрешающий элемент" = 68.42258069945404 $
$ mat(
0.00, 48.91, -19.64, 0.00, -32.19, -19.36, 28.25, 0.00, 0.06, 0.00, 0.67, 0.00, 0.00, 0.46, -63.63;
0.00, -43.91, 27.97, 0.00, -47.64, 32.53, 3.81, 0.00, -0.15, 0.00, -0.37, 0.00, 1.00, -0.43, 13.13;
0.00, 0.58, 0.03, 1.00, -0.10, -0.24, -0.15, 0.00, -0.01, 0.00, 0.01, 0.00, 0.00, -0.01, 0.55;
0.00, 2.34, -70.96, 0.00, -64.77, -48.66, -33.76, 0.00, -1.19, 0.00, 0.67, 1.00, 0.00, 0.19, 56.41;
1.00, -0.78, -0.77, 0.00, -0.02, 0.22, -0.21, 0.00, -0.02, 0.00, 0.01, 0.00, 0.00, 0.01, 0.38;
0.00, 27.59, 39.37, 0.00, -29.42, 52.26, 56.51, 0.00, 1.20, 1.00, -2.06, 0.00, 0.00, -0.84, 17.95;
0.00, 0.56, 1.52, 0.00, 0.75, 1.06, 1.01, 1.00, 0.01, 0.00, -0.02, 0.00, 0.00, -0.01, 0.17
) $
$ "разрешающая строка" = "№"7\
"разрешающий столбец" = "№"5\
"разрешающий элемент" = 0.7491472172422953 $
$ mat(
0.00, 72.97, 45.79, 0.00, 0.00, 26.12, 71.48, 42.97, 0.68, 0.00, -0.36, 0.00, 0.00, 0.06, -56.14;
0.00, -8.31, 124.80, 0.00, 0.00, 99.85, 67.79, 63.59, 0.78, 0.00, -1.90, 0.00, 1.00, -1.02, 24.23;
0.00, 0.66, 0.24, 1.00, 0.00, -0.09, -0.01, 0.14, -0.01, 0.00, 0.01, 0.00, 0.00, -0.01, 0.58;
0.00, 50.75, 60.70, 0.00, 0.00, 42.87, 53.23, 86.46, 0.07, 0.00, -1.40, 1.00, 0.00, -0.61, 71.50;
1.00, -0.77, -0.73, 0.00, 0.00, 0.24, -0.19, 0.02, -0.02, 0.00, 0.01, 0.00, 0.00, 0.01, 0.38;
0.00, 49.58, 99.18, 0.00, 0.00, 93.83, 96.02, 39.28, 1.77, 1.00, -3.00, 0.00, 0.00, -1.20, 24.80;
0.00, 0.75, 2.03, 0.00, 1.00, 1.41, 1.34, 1.33, 0.02, 0.00, -0.03, 0.00, 0.00, -0.01, 0.23
) $
$ "разрешающая строка" = "№"3\
"разрешающий столбец" = "№"11\
"разрешающий элемент" = 1.1268571893482172e-2 $
$ mat(
0.00, 93.93, 53.44, 31.80, 0.00, 23.11, 71.15, 47.40, 0.48, 0.00, 0.00, 0.00, 0.00, -0.17, -37.81;
0.00, 102.83, 165.34, 168.61, 0.00, 83.88, 66.05, 87.09, -0.28, 0.00, 0.00, 0.00, 1.00, -2.22, 121.40;
0.00, 58.49, 21.34, 88.74, 0.00, -8.40, -0.92, 12.37, -0.55, 0.00, 1.00, 0.00, 0.00, -0.63, 51.14;
0.00, 132.69, 90.60, 124.33, 0.00, 31.09, 51.95, 103.79, -0.71, 0.00, 0.00, 1.00, 0.00, -1.49, 143.15;
1.00, -1.16, -0.88, -0.60, 0.00, 0.30, -0.18, -0.06, -0.01, 0.00, 0.00, 0.00, 0.00, 0.02, 0.03;
0.00, 225.09, 163.20, 266.27, 0.00, 68.62, 93.28, 76.39, 0.11, 1.00, 0.00, 0.00, 0.00, -3.09, 178.26;
0.00, 2.62, 2.72, 2.84, 1.00, 1.14, 1.31, 1.73, 0.00, 0.00, 0.00, 0.00, 0.00, -0.03, 1.87
) $
$ "разрешающая строка" = "№"5\
"разрешающий столбец" = "№"14\
"разрешающий элемент" = 1.7656702845772976e-2 $
$ mat(
9.35, 83.07, 45.24, 26.19, 0.00, 25.88, 69.43, 46.82, 0.38, 0.00, 0.00, 0.00, 0.00, 0.00, -37.49;
125.45, -42.82, 55.43, 93.35, 0.00, 121.00, 42.94, 79.34, -1.71, 0.00, 0.00, 0.00, 1.00, 0.00, 125.75;
35.68, 17.07, -9.92, 67.34, 0.00, 2.15, -7.49, 10.17, -0.96, 0.00, 1.00, 0.00, 0.00, 0.00, 52.38;
84.54, 34.54, 16.53, 73.61, 0.00, 56.11, 36.38, 98.57, -1.68, 0.00, 0.00, 1.00, 0.00, 0.00, 146.08;
56.64, -65.75, -49.62, -33.98, 0.00, 16.76, -10.43, -3.50, -0.65, 0.00, 0.00, 0.00, 0.00, 1.00, 1.96;
174.91, 22.02, 9.96, 161.34, 0.00, 120.38, 61.07, 65.59, -1.90, 1.00, 0.00, 0.00, 0.00, 0.00, 184.32;
1.84, 0.49, 1.10, 1.74, 1.00, 1.69, 0.97, 1.62, -0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 1.94
) $

$ underline("Оптимальное решение") = vec( 0.00, 0.00, 0.00, 0.00, 1.94, 0.00, 0.00, 0.00 )\
underline("Целевая функция") = 37.486338246050494 $

= Ответ

#grid(
    columns: (1fr,1fr),
    align(center)[
      Оптимальное решение П.З.:
      $ vec( 0.38, 0.00, 0.00, 0.00, 0.00, 0.00 )\
underline("Целевая функция") \ 37.48633824605062 $
      ],
    align(center)[
      Оптимальное решение Д.З.:
      $ vec( 0.00, 0.00, 0.00, 0.00, 1.94, 0.00, 0.00, 0.00 )\
underline("Целевая функция") \ 37.486338246050494 $
      ],
)

Целевая функция двойственной задачи = 37.486338246050
Значения целевых функций немного отличаются из-за погрешности вычислений.

= Приложение (Я.П.: Haskell)

Весь исходный код этого приложения можно найти по адресу https://github.com/AJMC2002/opt-methods/tree/main.

```haskell
-- src/Optimization/DirectTask.hs
module Optimization.DirectTask (solveDirect, getNextSimplex, getOptSol, ifBasisDo, isBasis) where

import Control.Monad (guard, (>=>))
import Data.Function (on)
import Data.Functor ((<&>))
import Data.List (elemIndex, minimumBy)
import Data.Massiv.Array as A
import Formst
import Utils (identity, zeros)
import Prelude as P

solveDirect :: Matrix P Double -> Vector P Double -> Vector P Double -> IO (Vector P Double, Double)
solveDirect a b c = do
    putStrLn "Прямая задача"
    putStrLn $ showMat simplex 2
    getNextSimplex (simplex, []) <&> getOptSol (size a)
  where
    Sz2 m n = size a
    simplex =
        computeP @P
            $ concat'
                2
                [ computeP @P $ concat' 1 [resize' (Sz2 1 n) ((-1) *. c), zeros $ Sz2 1 (m + 1)] -- c | 0 vec | 0
                , computeP @P $ concat' 1 [a, identity m, resize' (Sz2 m 1) b] -- a | identity | b
                ]

getNextSimplex :: (Matrix P Double, [(Int, Int, Double)]) -> IO (Matrix P Double, [(Int, Int, Double)])
getNextSimplex mat_pivots = maybe (return mat_pivots) (printSimplexData >=> getNextSimplex) (updateSimplex mat_pivots)

updateSimplex :: (Matrix P Double, [(Int, Int, Double)]) -> Maybe (Matrix P Double, [(Int, Int, Double)])
updateSimplex (simplex, pivots) = do
    let Sz2 m n = size simplex

    let c =
            filter ((0 >) . snd)
                $ P.take (n - 1)
                $ P.zip [0 ..]
                $ toList
                $ simplex
                !> 0
    guard $ not $ null c
    let pivot_col = fst $ minimumBy (compare `on` snd) c

    let b_ratios =
            filter ((0 <=) . snd)
                $ P.drop 1
                $ P.zip [0 ..]
                $ toList
                    ( (simplex <! (n - 1))
                        !/! (simplex <! pivot_col)
                    )
    guard $ not $ null b_ratios
    let pivot_row = fst $ minimumBy (compare `on` snd) b_ratios

    let pivot_val = simplex ! (pivot_row :. pivot_col)

    let new_simplex =
            makeArray
                (ParN 0)
                (size simplex)
                ( \(i :. j) ->
                    let
                        val = simplex ! (i :. j)
                     in
                        if i == pivot_row && j == pivot_col
                            then 1
                            else
                                if i == pivot_row
                                    then val / pivot_val
                                    else
                                        if j == pivot_col
                                            then 0
                                            else val - (simplex ! (i :. pivot_col)) * (simplex ! (pivot_row :. j)) / pivot_val
                )
        new_pivots = pivots ++ [(pivot_row, pivot_col, pivot_val)]

    Just
        ( new_simplex
        , new_pivots
        )

printSimplexData :: (Matrix P Double, [(Int, Int, Double)]) -> IO (Matrix P Double, [(Int, Int, Double)])
printSimplexData
    (simplex, pivots) = do
        let (row, col, val) = last pivots
        putStrLn $ "\"разрешающая строка\" = \"№\"" ++ show (row + 1)
        putStrLn $ "\"разрешающий столбец\" = \"№\"" ++ show (col + 1)
        putStrLn $ "\"разрешающий элемент\" = " ++ show val
        putStrLn $ showMat simplex 2
        return (simplex, pivots)

getOptSol :: Sz2 -> (Matrix P Double, [(Int, Int, Double)]) -> (Vector P Double, Double)
getOptSol (Sz2 _ a_cols) (simplex, pivots) =
    let Sz2 _ simplex_cols = size simplex
        updateOptSol sol [] = sol
        updateOptSol sol ((i, j, _) : ps) =
            updateOptSol
                ( if j < a_cols && (simplex ! (i :. j)) == 1
                    then replaceVal sol j (simplex ! (i :. (simplex_cols - 1)))
                    else sol
                )
                ps
        replaceVal list i newVal =
            l ++ [newVal] ++ r
          where
            (l, r') = P.splitAt i list
            r = if null r' then r' else P.tail r'
     in ( fromList (ParN 0)
            $ updateOptSol (P.replicate a_cols 0) pivots
        , abs $ simplex ! (0 :. (simplex_cols - 1))
        )

-- DONT FORGET TO ADD THE +1 TO THE ROW INDEX
ifBasisDo :: Matrix P Double -> Int -> (Int -> a, a) -> a
ifBasisDo mat j (case_just, case_nothing) =
    let column = P.drop 1 $ toList (mat <! j)
     in if P.sum column == 1
            then maybe case_nothing case_just (elemIndex 1 column)
            else case_nothing

isBasis mat j = ifBasisDo mat j (\i -> (mat ! ((i + 1) :. j)) == 1, False)
```

```haskell
-- src/Optimization/DualTask.hs
module Optimization.DualTask (solveHelper, solveDual) where

import Data.Functor ((<&>))
import Data.Massiv.Array as A
import Formst
import Optimization.DirectTask
import Utils (identity, zeros)
import Prelude as P

solveDual :: Matrix P Double -> Vector P Double -> Vector P Double -> IO (Vector P Double, Double)
solveDual a b c = do
    let Sz2 m n = size a
    (prev_simplex, pivots) <- solveHelper a c
    putStrLn "Двойственная задача"
    let !simplex' =
            computeP @P
                $ concat'
                    2
                    [ computeP @P
                        $ concat'
                            1
                            [ resize' (Sz2 1 m) b
                            , zeros (Sz2 1 (n + 1))
                            ]
                    , computeP @P
                        $ concat'
                            1
                            [ extract' (1 :. 0) (Sz2 n (m + n)) prev_simplex
                            , extract' (1 :. (m + 2 * n)) (Sz2 n 1) prev_simplex
                            ]
                    ]
    putStrLn $ "Pre-simplex: " ++ showMat simplex' 2
    let !simplex =
            foldl
                ( \accum j ->
                    ifBasisDo
                        accum
                        j
                        ( \i ->
                            makeArray @P
                                (ParN 0)
                                (size accum)
                                ( \(i' :. j') ->
                                    if i' == 0 && j' == j
                                        then 0
                                        else
                                            if i' == 0
                                                then (accum ! (0 :. j')) - (accum ! (0 :. j)) * (accum ! ((i + 1) :. j'))
                                                else accum ! (i' :. j')
                                )
                        , accum
                        )
                )
                simplex'
                [0 .. (n + m - 1)]
    putStrLn $ showMat simplex 2

    getNextSimplex (simplex, pivots) <&> getOptSol (size $ A.transpose a)

solveHelper :: Matrix P Double -> Vector P Double -> IO (Matrix P Double, [(Int, Int, Double)])
solveHelper a c = do
    putStrLn "Вспомогательная задача"
    putStrLn $ "Pre-simplex: " ++ showMat simplex' 2
    putStrLn $ showMat simplex 2
    (finalSimplex, pivots) <- getNextSimplex (simplex, [])
    let (!optSol, _) = getOptSol (size $ A.transpose a) (finalSimplex, pivots)
    putStrLn $ "\"Оптимальное решение\" = " ++ showVec optSol 2 ++ "\n"
    return (finalSimplex, pivots)
  where
    Sz2 m n = size a
    !simplex' =
        computeP @P
            $ concat'
                2
                [ computeP @P
                    $ concat'
                        1
                        [ zeros $ Sz2 1 (m + n)
                        , 1 +. (zeros @P $ Sz2 1 n)
                        , zeros $ Sz2 1 1 -- 0 vec | 1 vec | 0
                        ]
                , computeP @P
                    $ concat'
                        1
                        [ computeP @P $ A.transpose a
                        , (-1) *. identity n
                        , identity n
                        , resize' (Sz2 n 1) c -- aT | -identity | identity | c
                        ]
                ]
    !simplex =
        computeP @P
            $ concat'
                2
                [ resize' (Sz2 1 (m + 2 * n + 1))
                    $ fromList (ParN 0)
                    $ P.map
                        ( \j ->
                            (simplex' ! (0 :. j)) - P.sum (P.drop 1 $ toList (simplex' <! j))
                        )
                        [0 .. (m + 2 * n)]
                , computeP @P $ concat' 1 [computeP @P $ A.transpose a, (-1) *. identity n, identity n, resize' (Sz2 n 1) c]
                ]
```

```haskell
-- exe/Main.hs
module Main where

import Data.Massiv.Array as A
import Formst
import Optimization.DirectTask qualified as DirectTask
import Optimization.DualTask qualified as DualTask
import System.Random qualified as R
import Prelude as P

main :: IO ()
main = do
    let
        -- Initial values
        salt = 190902
        gen1 = R.mkStdGen salt
        gen2 = snd $ R.split gen1
        gen3 = snd $ R.split gen2
        rng = (0 :: Double, 100)
        comp = ParN 0
        a = computeP $ uniformRangeArray gen1 rng comp (Sz2 8 6) :: Matrix P Double
        b = computeP $ uniformRangeArray gen2 rng comp (Sz1 8)
        c = computeP $ uniformRangeArray gen3 rng comp (Sz 6)
    putStrLn $ showMat a 2
    putStrLn $ showVec b 2
    putStrLn $ showVec c 2
    sol <- DirectTask.solveDirect a b c
    putStrLn $ "\"Оптимальное решение\" = " ++ showVec (fst sol) 2
    putStrLn $ "\"Целевая функция\" = " ++ show (snd sol) ++ "\n"
    putStrLn $ showMat (computeP @P $ transpose a) 2
    sol2 <- DualTask.solveDual a b c
    putStrLn $ "\"Оптимальное решение\" = " ++ showVec (fst sol2) 2
    putStrLn $ "\"Целевая функция\" = " ++ show (snd sol2)
```
